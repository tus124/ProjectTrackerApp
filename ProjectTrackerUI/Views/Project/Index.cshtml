@model IEnumerable<ProjectTrackerUI.Models.Project>

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Projects List</h2>
        </div>
        <div class="col-6 text-right">
            <a asp-controller="Project" asp-action="Create" class="btn btn-primary">Create new Project</a>
            
        </div>
    </div>

    <br />
   <p></p> 

    @if(Model.Count() > 0)
    {
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Active
                    </th>
                   
                </tr>
            </thead>
            <tbody>
                @foreach(var item in Model)
                {
                <tr>
                    <td width="25%">@item.Name</td>
                    <td width="25%">@item.Description</td>
                    <td width="25%">@item.Active</td>
                    <td width="25%">
                        <div class="w-100 btn-group" role="group">
                            <a asp-controller="Expense" asp-action="Update" asp-route-Id="@item.Id" class="btn btn-primary mx-1">Update</a>
                            <a asp-controller="Expense" asp-action="Delete" asp-route-Id="@item.Id" class="btn btn-danger mx-1">Delete</a>
                        </div>
                    </td>
                </tr>
                }
            </tbody>
        </table> 
    }
    else
    {
        <p>No items created yet</p>
    }

</div>













@*
@{
    ViewData["Title"] = "Project";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Active)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
*@